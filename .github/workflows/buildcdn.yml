# This is a basic workflow to help you get started with Actions

name: Build Releases

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: 
    - master
    paths-ignore:
    - '**/README.md'
  pull_request:
    branches: 
    - master
    paths-ignore:
    - '**/README.md'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Generate ZIPs
        run: |
          chmod +x generate.sh
          ./generate.sh

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.3
        with:
          # Artifact name
          name: sdcard-latest
          # A file, directory or wildcard pattern that describes what to upload
          path: dist/*
      
  prepare-release:
    if: github.event_name != 'pull_request'
    needs: build
    strategy:
      matrix:
        zipreleases: [taranis-x9,taranis-x7,nv14,horus]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@master
        with:
          name: sdcard-latest
          path: .

  upload-release:
    needs: prepare-release
    runs-on: ubuntu-latest
    steps:
      - name: Deploy release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: 'latest'
          prerelease: false
          files: |
            taranis-x9.zip
            taranis-x7.zip
            nv14.zip
            horus.zip
